[{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sky Syzygy. Author, maintainer.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Syzygy S (2024). tessireport: Data hygiene tools Tessitura. R package version 0.1.0, https://github.com/skysyzygy/tessireport.","code":"@Manual{,   title = {tessireport: Data hygiene tools for Tessitura},   author = {Sky Syzygy},   year = {2024},   note = {R package version 0.1.0},   url = {https://github.com/skysyzygy/tessireport}, }"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/index.html","id":null,"dir":"","previous_headings":"","what":"Data hygiene tools for Tessitura","title":"Data hygiene tools for Tessitura","text":"tessireport set scripts data hygiene Tessitura, using data queried cached tessilake processed tessistream.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data hygiene tools for Tessitura","text":"can install latest version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"skysyzygy/tessireport\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Data hygiene tools for Tessitura","text":"run simple SQL report…","code":"library(tessireport)  run(sql_report, query = \"select * from my_table\",     subject = \"This is my table\",     emails = \"me@me.com\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/arrow_to_mlr3.html","id":null,"dir":"Reference","previous_headings":"","what":"arrow_to_mlr3 — arrow_to_mlr3","title":"arrow_to_mlr3 — arrow_to_mlr3","text":"Converts arrow Table/Dataset mlr3 Backend","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/arrow_to_mlr3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arrow_to_mlr3 — arrow_to_mlr3","text":"","code":"arrow_to_mlr3(dataset, primary_key = \"I\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/arrow_to_mlr3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arrow_to_mlr3 — arrow_to_mlr3","text":"dataset arrow::Table arrow::Dataset primary_key character name column use primary key","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/arrow_to_mlr3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arrow_to_mlr3 — arrow_to_mlr3","text":"mlr3db::DataBackendDplyr","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":null,"dir":"Reference","previous_headings":"","what":"contributions_model — contributions_model","title":"contributions_model — contributions_model","text":"mlr3 model predicting customer's first contribution","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contributions_model — contributions_model","text":"","code":"contributions_model  contributions_dataset(   since = Sys.Date() - 365 * 5,   until = Sys.Date(),   rebuild_dataset = NULL,   ... )  # S3 method for class 'contributions_model' read(   model,   since = Sys.Date() - 365 * 5,   until = Sys.Date(),   predict_since = Sys.Date() - 30,   rebuild_dataset = NULL,   downsample_read = 0.1,   predict = NULL,   ... )  # S3 method for class 'contributions_model' train(model, num_trees = 512, ...)  # S3 method for class 'contributions_model' predict(model, ...)  # S3 method for class 'contributions_model' output(model, downsample_output = 0.01, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"contributions_model — contributions_model","text":"object class contributions_model (inherits mlr_report, report, list) length 0.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contributions_model — contributions_model","text":"since Date/POSIXct data date loaded possibly used training Date/POSIXct data date used training predictions, defaults beginning today rebuild_dataset boolean rebuild dataset calling contributions_dataset(since=since,=) (TRUE), just read existing one (FALSE), append new rows calling contributions_dataset(since=max_existing_date,=) (NULL, default) ... used model contributions_model object predict_since Date/POSIXct data /date used make predictions training downsample_read numeric(1) amount downsample dataset read predict used, just prevent partial argument matching num_trees integer(1) maximum number trees use ranger model downsample_output numeric(1) amount downsample test set feature importance Shapley explanations","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"contributions_model — contributions_model","text":"read(contributions_model): Read contribution data prepare mlr3 training task prediction/validation task train(contributions_model): Tune train stacked log-reg/ranger model data predict(contributions_model): Predict using trained model output(contributions_model): create IML reports contributions_model","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"contributions_model — contributions_model","text":"contributions_dataset(): Build contributions dataset overall stream. events first contribution per household > $50 data event censored contribution indicators rolled back timestamps normalized start customer activity data since since loaded Data written primary cache partitioned year synced across storages","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"contributions_model — contributions_model","text":"Data loaded -memory, [inaudible] mlr3 work well factors encoded dictionaries arrow tables.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"preprocessing-","dir":"Reference","previous_headings":"","what":"Preprocessing:","title":"contributions_model — contributions_model","text":"ignore 1-day email \"send\" features leak data remove constant features balance classes ratio 1:10 T:F Yeo-Johnson tuned boundaries impute missing values --range add missing data indicator features feature importance filter (log-reg submodel )","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model.html","id":"model-","dir":"Reference","previous_headings":"","what":"Model:","title":"contributions_model — contributions_model","text":"stacked log-reg + ranger > log-reg model tuned using hyperband method AUC (sensitivity/specificity)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model_report.html","id":null,"dir":"Reference","previous_headings":"","what":"contributions_model_report — contributions_model_report","title":"contributions_model_report — contributions_model_report","text":"emailed report predictions contributions_model","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contributions_model_report — contributions_model_report","text":"","code":"contributions_model_report  # S3 method for class 'contributions_model_report' read(report, ...)  # S3 method for class 'contributions_model_report' process(report, ...)  # S3 method for class 'contributions_model_report' output(   report,   subject = paste(\"Contributions model\", Sys.Date()),   body = paste(\"Sent by\", Sys.info()[\"nodename\"]),   emails = config::get(\"tessiflow.email\"),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model_report.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"contributions_model_report — contributions_model_report","text":"object class contributions_model_report (inherits report, list) length 0.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contributions_model_report — contributions_model_report","text":"report contributions_model_report object ... used subject Subject email. body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>. emails email addresses (first sender)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/contributions_model_report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"contributions_model_report — contributions_model_report","text":"read(contributions_model_report): Read data contributions_model_report process(contributions_model_report): Process data contributions_model_report output(contributions_model_report): Send spreadsheet contributions_model_report","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_chunk_write.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset_chunk_write — dataset_chunk_write","title":"dataset_chunk_write — dataset_chunk_write","text":"Write chunk larger dataset, using Hadoop partition=partition nomenclature, saving cache dir dataset_name. chunk identified column rows, attached columns dataset identified cols. Features matching regular expression rollback rolled back one row, timestamps normalized dataset_normalize_timestamps.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_chunk_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset_chunk_write — dataset_chunk_write","text":"","code":"dataset_chunk_write(   dataset,   partition,   dataset_name,   rows = data.table(I = seq_len(nrow(dataset))),   cols = colnames(dataset),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_chunk_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dataset_chunk_write — dataset_chunk_write","text":"dataset data.frameish dataset load , must contain index column arrow_dplyr_query partition character|integer identifying partition chunk saved dataset_name character cache directory partition saved rows data.table identifying rows dataset load; appended dataset cols character columns dataset add partition ... Arguments passed dataset_rollback_event, dataset_normalize_timestamps rollback_cols character vector columns roll back event character column name containing logical feature indicates events rollback character column name group table timestamp_cols character vector columns normalize; defaults columns name containing word timestamp","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_normalize_timestamps.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset_normalize_timestamps — dataset_normalize_timestamps","title":"dataset_normalize_timestamps — dataset_normalize_timestamps","text":"Replaces date-times columns integer offsets timestamp, replaces timestamp integer offset minimum timestamp per group identified .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_normalize_timestamps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset_normalize_timestamps — dataset_normalize_timestamps","text":"","code":"dataset_normalize_timestamps(   dataset,   timestamp_cols = grep(\"timestamp\", colnames(dataset), value = T, ignore.case = T),   by = \"group_customer_no\",   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_normalize_timestamps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dataset_normalize_timestamps — dataset_normalize_timestamps","text":"dataset data.table data normalize timestamp_cols character vector columns normalize; defaults columns name containing word timestamp character column name group table ... used","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_normalize_timestamps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dataset_normalize_timestamps — dataset_normalize_timestamps","text":"normalized data.table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_rollback_event.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset_rollback_event — dataset_rollback_event","title":"dataset_rollback_event — dataset_rollback_event","text":"Rolls back data columns rows flagged event prevent data leaks training.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_rollback_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset_rollback_event — dataset_rollback_event","text":"","code":"dataset_rollback_event(   dataset,   event = \"event\",   rollback_cols = setdiff(colnames(dataset), c(by, event, \"timestamp\")),   by = \"group_customer_no\",   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_rollback_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dataset_rollback_event — dataset_rollback_event","text":"dataset data.table data roll back event character column name containing logical feature indicates events rollback rollback_cols character vector columns roll back character column name group table ... used","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dataset_rollback_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dataset_rollback_event — dataset_rollback_event","text":"rolled back data.table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dot-__TaskSurv__initialize.html","id":null,"dir":"Reference","previous_headings":"","what":".__TaskSurv__initialize — .__TaskSurv__initialize","title":".__TaskSurv__initialize — .__TaskSurv__initialize","text":"Shim .__TaskSurv__initialize work duckdb tables","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dot-__TaskSurv__initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".__TaskSurv__initialize — .__TaskSurv__initialize","text":"","code":".__TaskSurv__initialize(   id,   backend,   time = \"time\",   event = \"event\",   time2,   type = c(\"right\", \"left\", \"interval\", \"counting\", \"interval2\", \"mstate\"),   label = NA_character_ )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/dot-__TaskSurv__initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".__TaskSurv__initialize — .__TaskSurv__initialize","text":"id (character(1)) Identifier new instance. backend (DataBackend) Either DataBackend, object convertible DataBackend as_data_backend(). E.g., data.frame() converted DataBackendDataTable.#' @template param_time time (character(1)) Name column event time data right censored, otherwise starting time interval censored. event (character(1)) Name column giving event indicator. data right censored \"0\"/FALSE means alive (event), \"1\"/TRUE means dead (event). type \"interval\" \"0\" means right censored, \"1\" means dead (event), \"2\" means left censored, \"3\" means interval censored. type \"interval2\" event ignored. time2 (character(1)) Name column ending time interval interval censored counting process data, otherwise ignored. type (character(1)) Name column giving type censoring. Default 'right' censoring. label (character(1)) Label new instance.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/duplicates_report.html","id":null,"dir":"Reference","previous_headings":"","what":"duplicates_report — duplicates_report","title":"duplicates_report — duplicates_report","text":"Sends email containing spreadsheet duplicates review","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/duplicates_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"duplicates_report — duplicates_report","text":"","code":"# S3 method for class 'duplicates_report' read(duplicates_report, ...)  # S3 method for class 'duplicates_report' output(duplicates_report, routing = NULL, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/duplicates_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"duplicates_report — duplicates_report","text":"duplicates_report duplicates_report object ... Arguments passed send_xlsx body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>. routing named list, names email addresses values vectors customer numbers. duplicate pair contains matching customer number emailed named email address.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/duplicates_report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"duplicates_report — duplicates_report","text":"read(duplicates_report): read duplicates data output tessistream::duplicates_stream output(duplicates_report): segments duplicates data based map provided routing emails excel spreadsheets using send_xlsx","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/iml.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpretable machine learning for mlr_report — iml","title":"Interpretable machine learning for mlr_report — iml","text":"Simple wrappers around iml-package classes provide streamlined approach generating interpretable plots explanatory data.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/iml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpretable machine learning for mlr_report — iml","text":"","code":"iml_predictor(model, data, predict.function = NULL, y = NULL)  iml_featureimp(   model,   data,   loss = \"logLoss\",   compare = \"difference\",   n.repetitions = 5,   features = NULL )  iml_featureeffects(   model,   data,   features = NULL,   method = \"ale\",   center.at = NULL,   grid.size = 20 )  iml_shapley(model, data, x.interest = NULL, sample.size = 100)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/iml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpretable machine learning for mlr_report — iml","text":"model mlr3::Learner model, pre-trained data data.table test dataset predict.function function function predict newdata. first argument model, second newdata. y character(1)|numeric|factor target vector (preferably) name target column data argument. Predictor tries infer target automatically model. loss character(1)|function. loss function. Either name loss (e.g. \"ce\" classification \"mse\") function. compare character(1) Either \"ratio\" \"difference\". n.repetitions numeric(1) many shufflings features done? features character names features compute feature effects/importance. method character(1) 'ale' accumulated local effects, 'pdp' partial dependence plot, 'ice' individual conditional expectation curves, 'pdp+ice' partial dependence plot ice curves within plot. center.numeric(1) Value plot centered. Ignored case two features. grid.size numeric(1) size grid evaluating predictions. x.interest data.frame data explained. sample.size numeric(1) number Monte Carlo samples estimating Shapley value.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/iml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpretable machine learning for mlr_report — iml","text":"iml_predictor(): iml::Predictor iml_featureimp(): iml::FeatureImp iml_featureeffects(): iml::FeatureEffects iml_shapley(): iml::Shapley","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/iml.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Interpretable machine learning for mlr_report — iml","text":"iml_predictor(): wrapper iml::Predictor subset features data provide predict.function y predictor identify . iml_featureimp(): wrapper iml::FeatureImp handles predictor creation multiprocessing iml_featureeffects(): wrapper iml::FeatureEffects handles data filtering, predictor creation multiprocessing iml_shapley(): wrapper iml::Shapley handles predictor creation multiprocessing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/make_unsubscribe_report_fixtures.html","id":null,"dir":"Reference","previous_headings":"","what":"make_unsubscribe_report_fixtures — make_unsubscribe_report_fixtures","title":"make_unsubscribe_report_fixtures — make_unsubscribe_report_fixtures","text":"Make fixtures unsubscribe_report testing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/make_unsubscribe_report_fixtures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_unsubscribe_report_fixtures — make_unsubscribe_report_fixtures","text":"","code":"make_unsubscribe_report_fixtures()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr_report — mlr_report","title":"mlr_report — mlr_report","text":"Base class training/running machine learning model","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mlr_report — mlr_report","text":"","code":"mlr_report  # S3 method for class 'mlr_report' read(mlr_report, ...)  # S3 method for class 'mlr_report' process(mlr_report, train = TRUE, predict = TRUE, ...)  train(...)  predict(...)  # S3 method for class 'mlr_report' output(mlr_report, ...)  # S3 method for class 'mlr_report' write(mlr_report, subdir = class(mlr_report)[1], sync = TRUE, ...)  load_model(subdir = \"model\", model_name = \"model.Rds\")  save_model(model, subdir = \"model\", model_name = \"model.Rds\", sync = TRUE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mlr_report — mlr_report","text":"object class mlr_report (inherits report, list) length 0.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mlr_report — mlr_report","text":"mlr_report report object ... used train boolean whether run training predict boolean whether run predictions subdir character(1) location model stored sync boolean whether sync data across storages model_name character(1) filename model model mlr3::Learner saved","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"mlr_report — mlr_report","text":"read(mlr_report): load dataset mlr_report$task charge labeling column roles (.e. feature, target, group, weight) process(mlr_report): training /run model. Subclasses define train.mlr_model predict.mlr_model function, load mlr_report$task store results mlr_report$model mlr_report$predictions output(mlr_report): Analyze input set sensitivity training using standard heuristics. write(mlr_report): Save trained model model output future use. Writes model tessilake::cache_primary_path subdirectory subdir syncs across storages.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/mlr_report.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"mlr_report — mlr_report","text":"train(): Train model predict(): Predict model load_model(): load serialized mlr model disk save_model(): save serialized mlr model disk","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_orphans_report.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_orphans_report — p2_orphans_report","title":"p2_orphans_report — p2_orphans_report","text":"Sends email containing plot recent orphans spreadsheet orphans.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_orphans_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_orphans_report — p2_orphans_report","text":"","code":"# S3 method for class 'p2_orphans_report' run(p2_orphans_report, freshness = 0, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_orphans_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_orphans_report — p2_orphans_report","text":"p2_orphans_report p2_orphans_report object freshness returned data least fresh ... used","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_segments_and_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_segments_and_tags — p2_segments_and_tags","title":"p2_segments_and_tags — p2_segments_and_tags","text":"Report Prospect2 segments tags review","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_segments_and_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_segments_and_tags — p2_segments_and_tags","text":"","code":"p2_segments_and_tags  # S3 method for class 'p2_segments_and_tags' read(data, ...)  # S3 method for class 'p2_segments_and_tags' process(   data,   segment_regex = \"^Segment of\",   tag_regex = \"(?!.*RSVP|.*\\\\(Keep\\\\))\\\\d{6,}\",   ... )  # S3 method for class 'p2_segments_and_tags' output(data, emails = config::get(\"tessiflow.email\"), body = NULL, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_segments_and_tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"p2_segments_and_tags — p2_segments_and_tags","text":"object class p2_segments_and_tags (inherits report, list) length 0.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_segments_and_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_segments_and_tags — p2_segments_and_tags","text":"data report object ... additional parameters passed send_email segment_regex Perl-compatible regular expression filtering segment names tag_regex Perl-compatible regular expression filtering tag names emails email addresses (first sender) body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/p2_segments_and_tags.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"p2_segments_and_tags — p2_segments_and_tags","text":"read(p2_segments_and_tags): load Prospect2 segments tags process(p2_segments_and_tags): filter Prospect2 segments tags output(p2_segments_and_tags): send email spreadsheets segments tags","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/parse_shapley.html","id":null,"dir":"Reference","previous_headings":"","what":"parse_shapley — parse_shapley","title":"parse_shapley — parse_shapley","text":"Parse data returned iml::Shapley single single. Explanations sorted importance, filtered filter, top n collected formatted single string.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/parse_shapley.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse_shapley — parse_shapley","text":"","code":"parse_shapley(explanation, filter = \"=0|=NA\", n = 3)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/parse_shapley.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse_shapley — parse_shapley","text":"explanation data.frame explanations returned iml::Shapley filter character(1) regular expression feature/value combinations exclude n integer(1) maximum number explanatory features return","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/parse_shapley.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse_shapley — parse_shapley","text":"string explaining feature values","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pdf_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"pdf_plot — pdf_plot","title":"pdf_plot — pdf_plot","text":"Add plot pdf generating R markdown, intended used within expr argument write_pdf","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pdf_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pdf_plot — pdf_plot","text":"","code":"pdf_plot(plot, title = NULL, subtitle = NULL)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pdf_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pdf_plot — pdf_plot","text":"plot output ggplot plot can printed title character optional title plot subtitle character subtitle plot","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pdf_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pdf_plot — pdf_plot","text":"","code":"library(ggplot2) p <- ggplot(data.frame(x=runif(100))) + geom_histogram(aes(x)) write_pdf(pdf_plot(p, title = \"Sample plot\", subtitle = \"histogram of random numbers\")) #> 1/1 #>  #>  #> processing file: fileb0947ac53a9.Rmd #> 1/3                   #> 2/3 [setup]           #> 3/3 [unnamed-chunk-1] #> output file: fileb0947ac53a9.knit.md #> /opt/hostedtoolcache/pandoc/3.1.11/x64/pandoc +RTS -K512m -RTS fileb0947ac53a9.knit.md --to latex --from markdown+autolink_bare_uris+tex_math_single_backslash --output /tmp/RtmppEKsU1/fileb094f8baa22.tex --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua --embed-resources --standalone --highlight-style tango --pdf-engine xelatex --variable graphics --include-in-header /tmp/RtmppEKsU1/rmarkdown-strb0941dc4fae1.html  #> Warning: error in running command #> ! sh: 1: xelatex: not found #> Error: LaTeX failed to compile /tmp/RtmppEKsU1/fileb094f8baa22.tex. See https://yihui.org/tinytex/r/#debugging for debugging tips. See fileb094f8baa22.log for more info."},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"report — report","title":"report — report","text":"Base S3 class report.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"report — report","text":"","code":"report(x = list(), class = character())  is_report(x)  read(...)  # S3 method for class 'report' read(x, ...)  process(...)  # S3 method for class 'report' process(x, ...)  # S3 method for class 'report' print(x, ...)  output(...)  # S3 method for class 'report' output(x, ...)  write(...)  # S3 method for class 'report' write(x, ...)  run(...)  # S3 method for class 'report' run(x, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"report — report","text":"x list class optional additional subclass ... additional parameters subclassed methods","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"report — report","text":"read(report): thing print warning, intended overloaded subclass process(report): thing print warning, intended overloaded subclass print(report): prints names contents report object output(report): thing print warning, intended overloaded subclass write(report): thing print warning, intended overloaded subclass run(report): run methods order: read -> process -> output -> write","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/report.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"report — report","text":"is_report(): tests x report object read(): generic function dispatch data reading process(): generic function dispatch data processing output(): generic fucntion dispatch data output write(): generic function dispatch data saving run(): generic function dispatch report running","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_email.html","id":null,"dir":"Reference","previous_headings":"","what":"send_email — send_email","title":"send_email — send_email","text":"send_email","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"send_email — send_email","text":"","code":"send_email(   subject,   body = paste(\"Sent by\", Sys.info()[\"nodename\"]),   emails = config::get(\"tessiflow.email\"),   smtp = config::get(\"tessiflow.smtp\"),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"send_email — send_email","text":"subject Subject email. body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>. emails email addresses (first sender) smtp list configuration parameters establish authorize connection SMTP server. See details various parameters. ... Arguments passed mailR::send.mail html boolean indicating whether body email parsed HTML. attach.files character vector paths file system linking files *valid* URLs attached email (see details info attaching URLs)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_unsubscribe_report_table.html","id":null,"dir":"Reference","previous_headings":"","what":"send_unsubscribe_report_table — send_unsubscribe_report_table","title":"send_unsubscribe_report_table — send_unsubscribe_report_table","text":"Simple wrapper send_xlsx","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_unsubscribe_report_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"send_unsubscribe_report_table — send_unsubscribe_report_table","text":"","code":"send_unsubscribe_report_table(table, email)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_unsubscribe_report_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"send_unsubscribe_report_table — send_unsubscribe_report_table","text":"table data.table send email character email address send email ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"send_xlsx — send_xlsx","title":"send_xlsx — send_xlsx","text":"Simple wrapper send_email write_xlsx","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"send_xlsx — send_xlsx","text":"","code":"send_xlsx(   table,   subject = paste(format(substitute(table)), Sys.Date()),   body = paste(\"Sent by\", Sys.info()[\"nodename\"]),   emails = config::get(\"tessiflow.email\"),   basename = format(substitute(table)),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/send_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"send_xlsx — send_xlsx","text":"table data.table send subject Subject email. body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>. emails email addresses (first sender) basename name file use email. Defaults name table. timestamp extension appended passed mailR::send.mail file.names ... Arguments passed mailR::send.mail, write_xlsx html boolean indicating whether body email parsed HTML. inline boolean indicating whether images HTML file embedded inline. group character name column used grouping/banding data. Band color change column value changes. currency character vector column used grouping/banding data. Band color change column value changes.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/sql_report.html","id":null,"dir":"Reference","previous_headings":"","what":"sql_report — sql_report","title":"sql_report — sql_report","text":"Report wraps functionality tessilake::read_sql send_xlsx","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/sql_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sql_report — sql_report","text":"","code":"# S3 method for class 'sql_report' run(sql_report, ...)  # S3 method for class 'sql_report' read(sql_report, query, ...)  # S3 method for class 'sql_report' output(sql_report, query, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/sql_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sql_report — sql_report","text":"sql_report sql_report object ... Arguments passed tessilake::read_sql, send_xlsx, write_xlsx, mailR::send.mail primary_keys character vector, primary keys table. read_sql_table attempt identify primary keys using SQL metadata. freshness returned data least fresh basename name file use email. Defaults name table. timestamp extension appended passed mailR::send.mail file.names emails email addresses (first sender) body Body email text. parameter body refers existing file location, text file parsed body email. Default Sent <computer name>. subject Subject email. group character name column used grouping/banding data. Band color change column value changes. currency character vector column used grouping/banding data. Band color change column value changes. html boolean indicating whether body email parsed HTML. inline boolean indicating whether images HTML file embedded inline. query character sql query generate report","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/sql_report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"sql_report — sql_report","text":"read(sql_report): reads sql_report data output(sql_report): sends sql_report data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/sql_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"sql_report — sql_report","text":"","code":"if (FALSE) { # \\dontrun{  run(sql_report,       query = \"select * from my_table\",       subject = \"Email subject\",       body = \"Email body\",       emails = \"me@me.com\"  ) } # }"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/tessireport-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tessireport: Data hygiene tools for Tessitura — tessireport-package","title":"tessireport: Data hygiene tools for Tessitura — tessireport-package","text":"tessireport set scripts data hygiene Tessitura, using data queried cached tessilake processed tessistream.","code":""},{"path":[]},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/tessireport-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tessireport: Data hygiene tools for Tessitura — tessireport-package","text":"Maintainer: Sky Syzygy sky@skysyzygy.xyz (ORCID)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":null,"dir":"Reference","previous_headings":"","what":"unsubscribe_report — unsubscribe_report","title":"unsubscribe_report — unsubscribe_report","text":"Reports unsubscribes bad addresses group customers","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unsubscribe_report — unsubscribe_report","text":"","code":"# S3 method for class 'unsubscribe_report' run(unsubscribe_report, ...)  # S3 method for class 'unsubscribe_report' read(unsubscribe_report, customers, ...)  # S3 method for class 'unsubscribe_report' process(unsubscribe_report, ...)  # S3 method for class 'unsubscribe_report' output(   unsubscribe_report,   since = Sys.Date() - 30,   until = Sys.Date() + 30,   routing_rules = list(TRUE ~ list(config::get(\"tessiflow.email\"))),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unsubscribe_report — unsubscribe_report","text":"unsubscribe_report unsubscribe_report object ... used customers integer vector customer numbers load since date, start date filtering returned data date, end date filtering returned data routing_rules list formulas used routing, dplyr::case_when. Can refer columns returned process.unsubscribe_report. See Note ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"unsubscribe_report — unsubscribe_report","text":"read(unsubscribe_report): reads unsubscribe_report data Loads data p2: unsubscribes hard bounces list (uses p2_stream_enriched tessistream) tessi: emails, addresses, logins, memberships, constituencies, MGOs (attributes) process(unsubscribe_report): process unsubscribe_report data Checks emails unsubscribed, bounced, exist Checks mailing addresses NCOA flag exist Checks customer primary login match primary email Checks customers inactive Adds identifying info: MGO, constituencies, membership expiration date level output(unsubscribe_report): send unsubscribe_report emails MGOs Data filtered events since returned events members expiration dates since returned","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"unsubscribe_report — unsubscribe_report","text":"example, value routing_rules:   Routes based following rules: GOV -> send Government Affairs (eleszynski) CP# -> send Strategic Partnerships (lmcgee) ??+ -> send Patron Program (apratama jhindle) -> send Dev Ops (kburke esearles)","code":"list(grepl(\"GOV\", constituencies) ~ list(\"eleszynski@bam.org\"),      grepl(\"CP\\\\d\", constituencies) ~ list(\"lmcgee@bam.org\"),      grepl(\"\\\\+\",constituencies) ~ list(c(\"apratama@bam.org\",\"jhindle@bam.org\")),      TRUE ~ list(c(\"kburke@bam.org\",\"esearles@bam.org\")))"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/unsubscribe_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unsubscribe_report — unsubscribe_report","text":"","code":"if (FALSE) { # \\dontrun{ run(unsubscribe_report,     customers = c(1,2,3),     routing_rules = list(grepl(\"GOV\", constituencies) ~ list(\"eleszynski@bam.org\"),                          grepl(\"CP\\\\d\", constituencies) ~ list(\"lmcgee@bam.org\"),                          grepl(\"\\\\+\",constituencies) ~ list(c(\"apratama@bam.org\",\"jhindle@bam.org\")),                          TRUE ~ list(c(\"kburke@bam.org\",\"esearles@bam.org\")))) } # }"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"write_pdf — write_pdf","title":"write_pdf — write_pdf","text":"write_pdf","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_pdf — write_pdf","text":"","code":"write_pdf(   expr,   output_file = tempfile(fileext = \".pdf\"),   .title = NULL,   .author = NULL,   .date = today(),   .classoption = \"landscape\",   .papersize = \"legal\",   .mainfont = \"Arial\",   .geometry = \"margin=0.5in\",   .fontsize = \"9pt\",   fig.width = 14,   fig.height = 7.5,   preamble = system.file(\"pdf_memoir-preamble.Rmd\", package = \"tessireport\") )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_pdf — write_pdf","text":"expr expression execute create body pdf' output_file character filename write , defaults temporary file .title character title header pdf; see preamble variable passed pandoc .author character author header pdf; see preamble variable passed pandoc .date character date header pdf; see preamble variable passed pandoc .classoption character tex classoption; see preamble variable passed pandoc .papersize character tex pagesize; see preamble variable passed pandoc .mainfont character tex mainfont; see preamble variable passed pandoc .geometry character tex geometry; see preamble variable passed pandoc .fontsize character tex fontsize; see preamble variable passed pandoc fig.width integer knitr figure width, passed knitr::opts_chunk fig.height integer knitr figure height, passed knitr::opts_chunk preamble filename yaml preamble used pandoc generating pdf","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_pdf — write_pdf","text":"character filename pdf file","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"write_xlsx — write_xlsx","title":"write_xlsx — write_xlsx","text":"Convenience wrapper around openxlsx::write.xlsx handle common formatting tasks: Column headers title-cased bolded Column widths calculated based string representations data Date columns formatted DATE instead LONGDATE optional additions: Band columns group Specify currency columns","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_xlsx — write_xlsx","text":"","code":"write_xlsx(   data,   filename = tempfile(\"write_xlsx\", fileext = \".xlsx\"),   group = NULL,   currency = NULL,   overwrite = FALSE,   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_xlsx — write_xlsx","text":"data data write spreadsheet filename filename write group character name column used grouping/banding data. Band color change column value changes. currency character vector column used grouping/banding data. Band color change column value changes. overwrite TRUE, overwrite existing file. ... used","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/reference/write_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_xlsx — write_xlsx","text":"filename written xlsx","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessireport/news/index.html","id":"tessireport-010","dir":"Changelog","previous_headings":"","what":"tessireport 0.1.0","title":"tessireport 0.1.0","text":"Prospect2 segments tags + orphans report Duplicates report First contributions ML model VIP unsubscribe reporting MLR3 machine learning model interpretation pdf/xlsx outputs emails simple SQL-based reporting","code":""}]
