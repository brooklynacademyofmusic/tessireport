% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_report.R
\name{sql_report}
\alias{sql_report}
\alias{run.sql_report}
\alias{read.sql_report}
\alias{output.sql_report}
\title{sql_report}
\usage{
\method{run}{sql_report}(sql_report, ...)

\method{read}{sql_report}(sql_report, query, ...)

\method{output}{sql_report}(sql_report, query, ...)
}
\arguments{
\item{sql_report}{sql_report object}

\item{...}{
  Arguments passed on to \code{\link[tessilake:read_sql]{tessilake::read_sql}}, \code{\link[=send_xlsx]{send_xlsx}}, \code{\link[=write_xlsx]{write_xlsx}}, \code{\link[mailR:send.mail]{mailR::send.mail}}
  \describe{
    \item{\code{primary_keys}}{character vector, primary keys of the table. \code{read_sql_table} will attempt to identify the primary keys using
SQL metadata.}
    \item{\code{freshness}}{the returned data will be at least this fresh}
    \item{\code{basename}}{name of the file to use in the email. Defaults to the name of the table.
A timestamp and extension will be appended and passed on to \link{send_email} as the name of \code{attachments}.}
    \item{\code{emails}}{email addresses (first will be sender)}
    \item{\code{subject}}{character subject of the email}
    \item{\code{body}}{html of message or a list containing \link[sendmailR:mime_part]{sendmailR::mime_part} objects.}
    \item{\code{group}}{character name of column to be used for grouping/banding the data. Band color will change when column value changes.}
    \item{\code{currency}}{character vector of column to be used for grouping/banding the data. Band color will change when column value changes.}
    \item{\code{html}}{A boolean indicating whether the body of the email should be parsed as HTML.}
    \item{\code{inline}}{A boolean indicating whether images in the HTML file should be embedded inline.}
  }}

\item{query}{character sql query to generate the report}
}
\description{
Report that wraps the functionality of \link[tessilake:read_sql]{tessilake::read_sql} and \link{send_xlsx}
}
\section{Methods (by generic)}{
\itemize{
\item \code{read(sql_report)}: reads sql_report data

\item \code{output(sql_report)}: sends sql_report data

}}
\examples{
\dontrun{
 run(sql_report,
      query = "select * from my_table",
      subject = "Email subject",
      body = "Email body",
      emails = "me@me.com"
 )
}
}
