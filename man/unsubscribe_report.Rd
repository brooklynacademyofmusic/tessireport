% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unsubscribe_report.R
\name{unsubscribe_report}
\alias{unsubscribe_report}
\alias{read.unsubscribe_report}
\alias{process.unsubscribe_report}
\alias{output.unsubscribe_report}
\title{unsubscribe_report}
\usage{
\method{read}{unsubscribe_report}(unsubscribe_report, customers, ...)

\method{process}{unsubscribe_report}(unsubscribe_report, ...)

\method{output}{unsubscribe_report}(
  unsubscribe_report,
  since = Sys.Date() - 30,
  until = Sys.Date() + 30,
  routing_rules = list(TRUE ~ list(config::get("tessiflow.email"))),
  name = "contact_warning",
  subject = paste("Contact warning report for", Sys.Date()),
  ...
)
}
\arguments{
\item{unsubscribe_report}{unsubscribe_report object}

\item{customers}{integer vector of customer numbers to load}

\item{...}{not used}

\item{since}{date, start date for filtering the returned data}

\item{until}{date, end date for filtering the returned data}

\item{routing_rules}{list of formulas to be used for routing, as for \link[dplyr:case_when]{dplyr::case_when}. Can refer to any columns returned by \link{process.unsubscribe_report}. See \strong{Note} below}

\item{name}{name of the file to use in the email. Defaults to the name of the table or the inputted filename.
A timestamp and extension will be appended and passed on to \link{send_email} as the name of \code{attachments}.}

\item{subject}{character subject of the email}
}
\description{
Reports on unsubscribes and bad addresses for a group of customers
}
\section{Methods (by generic)}{
\itemize{
\item \code{read(unsubscribe_report)}: reads unsubscribe_report data
Loads data from
\itemize{
\item p2: unsubscribes and hard bounces by list (uses p2_stream_enriched from tessistream)
\item tessi: emails, addresses, logins, memberships, constituencies, MGOs (attributes)
}

\item \code{process(unsubscribe_report)}: process unsubscribe_report data
\itemize{
\item Checks if emails are unsubscribed, bounced, or don't exist
\item Checks if mailing addresses have a NCOA flag or don't exist
\item Checks if the customer primary login doesn't match the primary email
\item Checks if customers are inactive
\item Adds identifying info: MGO, constituencies, membership expiration date and level
}

\item \code{output(unsubscribe_report)}: send the unsubscribe_report as emails to MGOs

Data is filtered so that all events after \code{since} are returned and all events for members with expiration dates
between \code{since} and \code{until} are returned

}}
\note{
For example, this value for routing_rules:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(grepl("GOV", constituencies) ~ list("eleszynski@bam.org"),
     grepl("CP\\\\d", constituencies) ~ list("lmcgee@bam.org"),
     grepl("\\\\+",constituencies) ~ list(c("apratama@bam.org","jhindle@bam.org")),
     TRUE ~ list(c("kburke@bam.org","esearles@bam.org")))
}\if{html}{\out{</div>}}

Routes based on the following rules:
\itemize{
\item GOV -> send to Government Affairs (eleszynski)
\item CP# -> send to Strategic Partnerships (lmcgee)
\item ??+ -> send to Patron Program (apratama and jhindle)
\item Other -> send to Dev Ops (kburke and esearles)
}
}
\examples{
\dontrun{
run(unsubscribe_report,
    customers = c(1,2,3),
    routing_rules = list(grepl("GOV", constituencies) ~ list("eleszynski@bam.org"),
                         grepl("CP\\\\d", constituencies) ~ list("lmcgee@bam.org"),
                         grepl("\\\\+",constituencies) ~ list(c("apratama@bam.org","jhindle@bam.org")),
                         TRUE ~ list(c("kburke@bam.org","esearles@bam.org"))))
}

}
